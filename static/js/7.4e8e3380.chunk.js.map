{"version":3,"sources":["components/comon/Modal.js","components/snake/index.module.scss","components/snake/SnakeBody.js","components/snake/Food.js","../node_modules/nanoid/index.browser.js","components/snake/music/Eat.mp3","components/snake/music/GameOver.mp3","components/snake/Board.js","components/snake/Helpers.js","components/snake/Game.js","components/snake/Score.js","components/snake/Snake.js"],"names":["ScoreModal","title","text","modal","setModal","newGame","isOpen","toggle","className","color","onClick","module","exports","SnakeBody","snake","map","el","style","snakeBody","bottom","y","left","x","id","Food","food","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","BOARD","EatSound","Audio","Eat","GameOverSound","GameOver","compare","obj1","obj2","newFoodRandom","blankPart","differenceWith","length","randomNumber","random","createInitalState","direction","initalState","Move","payload","newSnake","head","GameOverCondition","checkBorderAndSnake","setGameOver","push","eatOrNot","dispatchGameAction","scoreIncrease","dispatch","gameOverCondition","play","type","setTimeout","shift","newHead","gameOverTogle","find","gameReducer","state","BlockOposit","NewGame","prevDir","nextDir","Game","gamePause","useReducer","gameState","keyDown","debounce","ev","keyCode","useEffect","document","addEventListener","interval","setInterval","removeEventListener","clearInterval","snakeGameBoard","Score","score","Snake","useState","setScore","pause","setPause","Container","Row","Col","xs","md","order","Button","autoFocus"],"mappings":"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","file":"static/js/7.4e8e3380.chunk.js","sourcesContent":["import React from \"react\";\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Button } from \"reactstrap\";\n\nexport const ScoreModal = ({ title, text, modal, setModal, newGame }) => {\n  return (\n    <Modal isOpen={modal} toggle={setModal}>\n      <ModalHeader className=\"justify-content-center\" toggle={setModal}>\n        {title}\n      </ModalHeader>\n      <ModalBody>{text}</ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={newGame}>\n          New Game\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"food\":\"snake_food__1zq9P\",\"snakeBody\":\"snake_snakeBody__1KUkU\",\"snakeGameBoard\":\"snake_snakeGameBoard__2eHLH\"};","import React from 'react';\nimport style from './index.module.scss';\n\nexport const SnakeBody = ({ snake }) => {\n  return snake.map(el => (\n    <div\n      key={el.id}\n      className={style.snakeBody}\n      style={{ bottom: `${el.y * 5}%`, left: `${el.x * 5}%` }}\n    ></div>\n  ));\n};\n","import React from 'react';\nimport style from './index.module.scss';\n\nexport const Food = ({ food }) => {\n  return (\n    <div\n      className={style.food}\n      style={{ bottom: `${food.y * 5}%`, left: `${food.x * 5}%` }}\n    ></div>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export default __webpack_public_path__ + \"static/media/Eat.766b5779.mp3\";","export default __webpack_public_path__ + \"static/media/GameOver.ee6aa1dc.mp3\";","export const BOARD = [\n  { x: 0, y: 0 },\n  { x: 0, y: 1 },\n  { x: 0, y: 2 },\n  { x: 0, y: 3 },\n  { x: 0, y: 4 },\n  { x: 0, y: 5 },\n  { x: 0, y: 6 },\n  { x: 0, y: 7 },\n  { x: 0, y: 8 },\n  { x: 0, y: 9 },\n  { x: 0, y: 10 },\n  { x: 0, y: 11 },\n  { x: 0, y: 12 },\n  { x: 0, y: 13 },\n  { x: 0, y: 14 },\n  { x: 0, y: 15 },\n  { x: 0, y: 16 },\n  { x: 0, y: 17 },\n  { x: 0, y: 18 },\n  { x: 1, y: 0 },\n  { x: 1, y: 1 },\n  { x: 1, y: 2 },\n  { x: 1, y: 3 },\n  { x: 1, y: 4 },\n  { x: 1, y: 5 },\n  { x: 1, y: 6 },\n  { x: 1, y: 7 },\n  { x: 1, y: 8 },\n  { x: 1, y: 9 },\n  { x: 1, y: 10 },\n  { x: 1, y: 11 },\n  { x: 1, y: 12 },\n  { x: 1, y: 13 },\n  { x: 1, y: 14 },\n  { x: 1, y: 15 },\n  { x: 1, y: 16 },\n  { x: 1, y: 17 },\n  { x: 1, y: 18 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 2, y: 4 },\n  { x: 2, y: 5 },\n  { x: 2, y: 6 },\n  { x: 2, y: 7 },\n  { x: 2, y: 8 },\n  { x: 2, y: 9 },\n  { x: 2, y: 10 },\n  { x: 2, y: 11 },\n  { x: 2, y: 12 },\n  { x: 2, y: 13 },\n  { x: 2, y: 14 },\n  { x: 2, y: 15 },\n  { x: 2, y: 16 },\n  { x: 2, y: 17 },\n  { x: 2, y: 18 },\n  { x: 3, y: 0 },\n  { x: 3, y: 1 },\n  { x: 3, y: 2 },\n  { x: 3, y: 3 },\n  { x: 3, y: 4 },\n  { x: 3, y: 5 },\n  { x: 3, y: 6 },\n  { x: 3, y: 7 },\n  { x: 3, y: 8 },\n  { x: 3, y: 9 },\n  { x: 3, y: 10 },\n  { x: 3, y: 11 },\n  { x: 3, y: 12 },\n  { x: 3, y: 13 },\n  { x: 3, y: 14 },\n  { x: 3, y: 15 },\n  { x: 3, y: 16 },\n  { x: 3, y: 17 },\n  { x: 3, y: 18 },\n  { x: 4, y: 0 },\n  { x: 4, y: 1 },\n  { x: 4, y: 2 },\n  { x: 4, y: 3 },\n  { x: 4, y: 4 },\n  { x: 4, y: 5 },\n  { x: 4, y: 6 },\n  { x: 4, y: 7 },\n  { x: 4, y: 8 },\n  { x: 4, y: 9 },\n  { x: 4, y: 10 },\n  { x: 4, y: 11 },\n  { x: 4, y: 12 },\n  { x: 4, y: 13 },\n  { x: 4, y: 14 },\n  { x: 4, y: 15 },\n  { x: 4, y: 16 },\n  { x: 4, y: 17 },\n  { x: 4, y: 18 },\n  { x: 5, y: 0 },\n  { x: 5, y: 1 },\n  { x: 5, y: 2 },\n  { x: 5, y: 3 },\n  { x: 5, y: 4 },\n  { x: 5, y: 5 },\n  { x: 5, y: 6 },\n  { x: 5, y: 7 },\n  { x: 5, y: 8 },\n  { x: 5, y: 9 },\n  { x: 5, y: 10 },\n  { x: 5, y: 11 },\n  { x: 5, y: 12 },\n  { x: 5, y: 13 },\n  { x: 5, y: 14 },\n  { x: 5, y: 15 },\n  { x: 5, y: 16 },\n  { x: 5, y: 17 },\n  { x: 5, y: 18 },\n  { x: 6, y: 0 },\n  { x: 6, y: 1 },\n  { x: 6, y: 2 },\n  { x: 6, y: 3 },\n  { x: 6, y: 4 },\n  { x: 6, y: 5 },\n  { x: 6, y: 6 },\n  { x: 6, y: 7 },\n  { x: 6, y: 8 },\n  { x: 6, y: 9 },\n  { x: 6, y: 10 },\n  { x: 6, y: 11 },\n  { x: 6, y: 12 },\n  { x: 6, y: 13 },\n  { x: 6, y: 14 },\n  { x: 6, y: 15 },\n  { x: 6, y: 16 },\n  { x: 6, y: 17 },\n  { x: 6, y: 18 },\n  { x: 7, y: 0 },\n  { x: 7, y: 1 },\n  { x: 7, y: 2 },\n  { x: 7, y: 3 },\n  { x: 7, y: 4 },\n  { x: 7, y: 5 },\n  { x: 7, y: 6 },\n  { x: 7, y: 7 },\n  { x: 7, y: 8 },\n  { x: 7, y: 9 },\n  { x: 7, y: 10 },\n  { x: 7, y: 11 },\n  { x: 7, y: 12 },\n  { x: 7, y: 13 },\n  { x: 7, y: 14 },\n  { x: 7, y: 15 },\n  { x: 7, y: 16 },\n  { x: 7, y: 17 },\n  { x: 7, y: 18 },\n  { x: 8, y: 0 },\n  { x: 8, y: 1 },\n  { x: 8, y: 2 },\n  { x: 8, y: 3 },\n  { x: 8, y: 4 },\n  { x: 8, y: 5 },\n  { x: 8, y: 6 },\n  { x: 8, y: 7 },\n  { x: 8, y: 8 },\n  { x: 8, y: 9 },\n  { x: 8, y: 10 },\n  { x: 8, y: 11 },\n  { x: 8, y: 12 },\n  { x: 8, y: 13 },\n  { x: 8, y: 14 },\n  { x: 8, y: 15 },\n  { x: 8, y: 16 },\n  { x: 8, y: 17 },\n  { x: 8, y: 18 },\n  { x: 9, y: 0 },\n  { x: 9, y: 1 },\n  { x: 9, y: 2 },\n  { x: 9, y: 3 },\n  { x: 9, y: 4 },\n  { x: 9, y: 5 },\n  { x: 9, y: 6 },\n  { x: 9, y: 7 },\n  { x: 9, y: 8 },\n  { x: 9, y: 9 },\n  { x: 9, y: 10 },\n  { x: 9, y: 11 },\n  { x: 9, y: 12 },\n  { x: 9, y: 13 },\n  { x: 9, y: 14 },\n  { x: 9, y: 15 },\n  { x: 9, y: 16 },\n  { x: 9, y: 17 },\n  { x: 9, y: 18 },\n  { x: 10, y: 0 },\n  { x: 10, y: 1 },\n  { x: 10, y: 2 },\n  { x: 10, y: 3 },\n  { x: 10, y: 4 },\n  { x: 10, y: 5 },\n  { x: 10, y: 6 },\n  { x: 10, y: 7 },\n  { x: 10, y: 8 },\n  { x: 10, y: 9 },\n  { x: 10, y: 10 },\n  { x: 10, y: 11 },\n  { x: 10, y: 12 },\n  { x: 10, y: 13 },\n  { x: 10, y: 14 },\n  { x: 10, y: 15 },\n  { x: 10, y: 16 },\n  { x: 10, y: 17 },\n  { x: 10, y: 18 },\n  { x: 11, y: 0 },\n  { x: 11, y: 1 },\n  { x: 11, y: 2 },\n  { x: 11, y: 3 },\n  { x: 11, y: 4 },\n  { x: 11, y: 5 },\n  { x: 11, y: 6 },\n  { x: 11, y: 7 },\n  { x: 11, y: 8 },\n  { x: 11, y: 9 },\n  { x: 11, y: 10 },\n  { x: 11, y: 11 },\n  { x: 11, y: 12 },\n  { x: 11, y: 13 },\n  { x: 11, y: 14 },\n  { x: 11, y: 15 },\n  { x: 11, y: 16 },\n  { x: 11, y: 17 },\n  { x: 11, y: 18 },\n  { x: 12, y: 0 },\n  { x: 12, y: 1 },\n  { x: 12, y: 2 },\n  { x: 12, y: 3 },\n  { x: 12, y: 4 },\n  { x: 12, y: 5 },\n  { x: 12, y: 6 },\n  { x: 12, y: 7 },\n  { x: 12, y: 8 },\n  { x: 12, y: 9 },\n  { x: 12, y: 10 },\n  { x: 12, y: 11 },\n  { x: 12, y: 12 },\n  { x: 12, y: 13 },\n  { x: 12, y: 14 },\n  { x: 12, y: 15 },\n  { x: 12, y: 16 },\n  { x: 12, y: 17 },\n  { x: 12, y: 18 },\n  { x: 13, y: 0 },\n  { x: 13, y: 1 },\n  { x: 13, y: 2 },\n  { x: 13, y: 3 },\n  { x: 13, y: 4 },\n  { x: 13, y: 5 },\n  { x: 13, y: 6 },\n  { x: 13, y: 7 },\n  { x: 13, y: 8 },\n  { x: 13, y: 9 },\n  { x: 13, y: 10 },\n  { x: 13, y: 11 },\n  { x: 13, y: 12 },\n  { x: 13, y: 13 },\n  { x: 13, y: 14 },\n  { x: 13, y: 15 },\n  { x: 13, y: 16 },\n  { x: 13, y: 17 },\n  { x: 13, y: 18 },\n  { x: 14, y: 0 },\n  { x: 14, y: 1 },\n  { x: 14, y: 2 },\n  { x: 14, y: 3 },\n  { x: 14, y: 4 },\n  { x: 14, y: 5 },\n  { x: 14, y: 6 },\n  { x: 14, y: 7 },\n  { x: 14, y: 8 },\n  { x: 14, y: 9 },\n  { x: 14, y: 10 },\n  { x: 14, y: 11 },\n  { x: 14, y: 12 },\n  { x: 14, y: 13 },\n  { x: 14, y: 14 },\n  { x: 14, y: 15 },\n  { x: 14, y: 16 },\n  { x: 14, y: 17 },\n  { x: 14, y: 18 },\n  { x: 15, y: 0 },\n  { x: 15, y: 1 },\n  { x: 15, y: 2 },\n  { x: 15, y: 3 },\n  { x: 15, y: 4 },\n  { x: 15, y: 5 },\n  { x: 15, y: 6 },\n  { x: 15, y: 7 },\n  { x: 15, y: 8 },\n  { x: 15, y: 9 },\n  { x: 15, y: 10 },\n  { x: 15, y: 11 },\n  { x: 15, y: 12 },\n  { x: 15, y: 13 },\n  { x: 15, y: 14 },\n  { x: 15, y: 15 },\n  { x: 15, y: 16 },\n  { x: 15, y: 17 },\n  { x: 15, y: 18 },\n  { x: 16, y: 0 },\n  { x: 16, y: 1 },\n  { x: 16, y: 2 },\n  { x: 16, y: 3 },\n  { x: 16, y: 4 },\n  { x: 16, y: 5 },\n  { x: 16, y: 6 },\n  { x: 16, y: 7 },\n  { x: 16, y: 8 },\n  { x: 16, y: 9 },\n  { x: 16, y: 10 },\n  { x: 16, y: 11 },\n  { x: 16, y: 12 },\n  { x: 16, y: 13 },\n  { x: 16, y: 14 },\n  { x: 16, y: 15 },\n  { x: 16, y: 16 },\n  { x: 16, y: 17 },\n  { x: 16, y: 18 },\n  { x: 17, y: 0 },\n  { x: 17, y: 1 },\n  { x: 17, y: 2 },\n  { x: 17, y: 3 },\n  { x: 17, y: 4 },\n  { x: 17, y: 5 },\n  { x: 17, y: 6 },\n  { x: 17, y: 7 },\n  { x: 17, y: 8 },\n  { x: 17, y: 9 },\n  { x: 17, y: 10 },\n  { x: 17, y: 11 },\n  { x: 17, y: 12 },\n  { x: 17, y: 13 },\n  { x: 17, y: 14 },\n  { x: 17, y: 15 },\n  { x: 17, y: 16 },\n  { x: 17, y: 17 },\n  { x: 17, y: 18 },\n  { x: 18, y: 0 },\n  { x: 18, y: 1 },\n  { x: 18, y: 2 },\n  { x: 18, y: 3 },\n  { x: 18, y: 4 },\n  { x: 18, y: 5 },\n  { x: 18, y: 6 },\n  { x: 18, y: 7 },\n  { x: 18, y: 8 },\n  { x: 18, y: 9 },\n  { x: 18, y: 10 },\n  { x: 18, y: 11 },\n  { x: 18, y: 12 },\n  { x: 18, y: 13 },\n  { x: 18, y: 14 },\n  { x: 18, y: 15 },\n  { x: 18, y: 16 },\n  { x: 18, y: 17 },\n  { x: 18, y: 18 }\n];\n","import { differenceWith, random } from \"lodash\";\nimport { nanoid } from \"nanoid\";\nimport { find } from \"lodash\";\nimport Eat from \"./music/Eat.mp3\";\nimport GameOver from \"./music/GameOver.mp3\";\nimport { BOARD } from \"./Board\";\n\nconst EatSound = new Audio(Eat);\nconst GameOverSound = new Audio(GameOver);\n\nfunction compare(obj1, obj2) {\n  if (obj1.x === obj2.x && obj1.y === obj2.y) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst newFoodRandom = (snake) => {\n  const blankPart = differenceWith(BOARD, snake, compare);\n  const length = blankPart.length - 1;\n  const randomNumber = random(length);\n  return { ...blankPart[randomNumber] };\n};\n\nconst createInitalState = () => {\n  const snake = [\n    { x: 8, y: 3, id: nanoid() },\n    { x: 9, y: 3, id: nanoid() },\n    { x: 9, y: 4, id: nanoid() },\n    { x: 9, y: 5, id: nanoid() },\n  ];\n\n  const food = newFoodRandom(snake);\n\n  return {\n    snake,\n    food,\n    direction: \"UP\",\n  };\n};\n\nexport const initalState = createInitalState();\n\nconst Move = ({ snake, food, direction }, payload) => {\n  const newSnake = [...snake];\n  const length = newSnake.length - 1;\n  const head = { ...newSnake[length], id: nanoid() };\n  switch (direction) {\n    case \"UP\":\n      head.y = head.y + 1;\n      break;\n    case \"DOWN\":\n      head.y = head.y - 1;\n      break;\n    case \"LEFT\":\n      head.x = head.x - 1;\n      break;\n    case \"RIGHT\":\n      head.x = head.x + 1;\n      break;\n    default:\n      break;\n  }\n  const GameOverCondition = checkBorderAndSnake(\n    head,\n    snake,\n    payload.setGameOver\n  );\n  if (GameOverCondition) {\n    newSnake.push(head);\n  }\n  eatOrNot(\n    newSnake,\n    food,\n    payload.dispatchGameAction,\n    GameOverCondition,\n    payload.scoreIncrease\n  );\n  return newSnake;\n};\n\nconst eatOrNot = (snake, food, dispatch, gameOverCondition, scoreIncrease) => {\n  const length = snake.length - 1;\n  const head = snake[length];\n\n  if (head.x === food.x && head.y === food.y) {\n    scoreIncrease();\n    EatSound.play();\n    dispatch({ type: \"FOOD\" });\n  } else if (!gameOverCondition) {\n    setTimeout(() => {\n      dispatch({ type: \"RESSET\" });\n    }, 500);\n    return;\n  } else {\n    snake.shift();\n  }\n};\n\nconst checkBorderAndSnake = (newHead, snake, gameOverTogle) => {\n  if (\n    newHead.x === 20 ||\n    newHead.y === 20 ||\n    newHead.x === -1 ||\n    newHead.y === -1\n  ) {\n    GameOverSound.play();\n    gameOverTogle(false);\n  } else if (\n    find(snake, function (el) {\n      return el.x === newHead.x && el.y === newHead.y;\n    })\n  ) {\n    GameOverSound.play();\n    gameOverTogle(false);\n  } else {\n    return true;\n  }\n};\n\nexport const gameReducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"MOVE\":\n      return { ...state, snake: Move(state, payload) };\n    case \"FOOD\":\n      return { ...state, food: newFoodRandom(state.snake) };\n    case \"CHANGE_DIRECTION\":\n      return { ...state, direction: BlockOposit(state.direction, payload) };\n    case \"RESSET\":\n      return NewGame();\n    default:\n      return state;\n  }\n};\n\nconst BlockOposit = (prevDir, nextDir) => {\n  switch (prevDir) {\n    case \"UP\":\n      if (nextDir === \"DOWN\") {\n        return \"UP\";\n      } else {\n        return nextDir;\n      }\n    case \"DOWN\":\n      if (nextDir === \"UP\") {\n        return \"DOWN\";\n      } else {\n        return nextDir;\n      }\n    case \"LEFT\":\n      if (nextDir === \"RIGHT\") {\n        return \"LEFT\";\n      } else {\n        return nextDir;\n      }\n    case \"RIGHT\":\n      if (nextDir === \"LEFT\") {\n        return \"RIGHT\";\n      } else {\n        return nextDir;\n      }\n\n    default:\n      return;\n  }\n};\n\nexport const NewGame = () => {\n  return createInitalState();\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { SnakeBody } from './SnakeBody';\nimport { Food } from './Food';\nimport style from './index.module.scss';\nimport { debounce } from 'lodash';\nimport { initalState, gameReducer, NewGame } from './Helpers';\n\nexport const Game = ({ setGameOver, gamePause, scoreIncrease }) => {\n  const [gameState, dispatchGameAction] = useReducer(\n    gameReducer,\n    initalState,\n    NewGame\n  );\n  const keyDownNorm = ev => {\n    switch (ev.keyCode) {\n      case 38:\n        dispatchGameAction({ type: 'CHANGE_DIRECTION', payload: 'UP' });\n        break;\n      case 40:\n        dispatchGameAction({ type: 'CHANGE_DIRECTION', payload: 'DOWN' });\n        break;\n      case 37:\n        dispatchGameAction({ type: 'CHANGE_DIRECTION', payload: 'LEFT' });\n        break;\n      case 39:\n        dispatchGameAction({ type: 'CHANGE_DIRECTION', payload: 'RIGHT' });\n        break;\n      default:\n        break;\n    }\n  };\n  const keyDown = debounce(keyDownNorm, 200);\n  useEffect(() => {\n    document.addEventListener('keydown', keyDown);\n    const interval = setInterval(() => {\n      if (gamePause === true) {\n        dispatchGameAction({\n          type: 'MOVE',\n          payload: { setGameOver, dispatchGameAction, scoreIncrease }\n        });\n      }\n    }, 300);\n    return () => {\n      document.removeEventListener('keydown', keyDown);\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gamePause]);\n\n  return (\n    <>\n      <div className={style.snakeGameBoard}>\n        <SnakeBody snake={gameState.snake} />\n        <Food food={gameState.food} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const Score = ({ score }) => {\n  return <h1 className='no-select-text'>{score}</h1>;\n};\n","import React, { useState } from \"react\";\nimport { Game } from \"./Game\";\nimport { Score } from \"./Score\";\nimport { Container, Col, Row, Button } from \"reactstrap\";\nimport { ScoreModal } from \"../comon/Modal\";\n\nconst Snake = () => {\n\tconst [score, setScore] = useState(0);\n\tconst [pause, setPause] = useState(false);\n\tconst [modal, setModal] = useState(false);\n\n\tconst scoreIncrease = () => {\n\t\tsetScore(score => score + 100);\n\t};\n\n\tconst gameOver = () => {\n\t\tsetPause(false);\n\t\tsetModal(true);\n\t};\n\n\tconst newGame = () => {\n\t\tsetModal(false);\n\t\tsetPause(true);\n\t\tsetScore(0);\n\t};\n\n\tconst closeModal = () => {\n\t\tsetModal(false);\n\t\tsetScore(0);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col\n\t\t\t\t\tclassName=\"justify-content-center align-items-center d-flex flex-column\"\n\t\t\t\t\txs={6}\n\t\t\t\t\tmd={{ size: 3, order: 1 }}\n\t\t\t\t>\n\t\t\t\t\t<h4>Play with arrow keys!!!</h4>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={ev => setPause(!pause)}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t>\n\t\t\t\t\t\t{pause ? \"Pause\" : \"Start\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col\n\t\t\t\t\tclassName=\"justify-content-center align-items-center d-flex\"\n\t\t\t\t\txs={6}\n\t\t\t\t\tmd={{ size: 3, order: 3 }}\n\t\t\t\t>\n\t\t\t\t\t<Score score={score} />\n\t\t\t\t</Col>\n\t\t\t\t<Col\n\t\t\t\t\tclassName=\"justify-content-center align-items-center d-flex\"\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={{ size: 6, order: 2 }}\n\t\t\t\t>\n\t\t\t\t\t<Game\n\t\t\t\t\t\tgamePause={pause}\n\t\t\t\t\t\tsetGameOver={gameOver}\n\t\t\t\t\t\tscoreIncrease={scoreIncrease}\n\t\t\t\t\t\tnewGame={newGame}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<ScoreModal\n\t\t\t\ttitle=\"Score\"\n\t\t\t\ttext={`Congratulations! Your score is ${score} !!!`}\n\t\t\t\tmodal={modal}\n\t\t\t\tsetModal={closeModal}\n\t\t\t\tnewGame={newGame}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\nexport default Snake;\n"],"sourceRoot":""}